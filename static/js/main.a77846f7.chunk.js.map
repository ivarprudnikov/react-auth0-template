{"version":3,"sources":["App.js","auth_config.js","react-auth0-spa.js","components/NavBar.js","components/Profile.js","utils/history.js","components/PrivateRoute.js","components/Home.js","serviceWorker.js","index.js"],"names":["axiosRequestInterceptorSetup","axiosResponseInterceptorSetup","domain","clientId","audience","scope","loginCallbackUrl","packageJson","homepage","logoutRedirectUrl","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","children","onRedirectCallback","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","useEffect","a","createAuth0Client","config","client_id","redirect_uri","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","catch","e","console","error","replace","getTokenSilently","accessToken","log","Error","raw","decoded","jwt_decode","getTokenScopesAsync","token","scopeString","split","hasAnyScopeAsync","scopes","tokenScopes","length","some","s","indexOf","Provider","value","getIdTokenClaims","loginWithRedirect","getTokenWithPopup","logoutWithRedirect","logout","returnTo","NavBar","className","to","process","type","onClick","Profile","apiUser","setApiUser","axios","get","then","response","data","aria-label","src","picture","alt","name","email","JSON","stringify","createBrowserHistory","PrivateRoute","Component","component","path","rest","targetUrl","fn","render","props","Home","bufferOf401PromiseResolvers","bufferOf403PromiseResolvers","App","defaults","baseURL","dialog401Open","setDialog401Open","dialog403Open","setDialog403Open","dialogServerErrorOpen","setDialogServerErrorOpen","ERROR","closeDialog","errorType","shift","call","interceptors","request","eject","use","headers","Authorization","err","resp","status","Promise","resolve","push","reject","apiErrorsIfAny","api401ErrorIfAny","api403ErrorIfAny","apiServerErrorIfAny","aria-hidden","exact","REACT_APP_VERSION","href","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"knCAUIA,EACAC,E,yGCTW,GACbC,OAAQ,6BACRC,SAAU,mCACVC,SAAU,4BACVC,MAAO,uBACPC,iBAA0DC,EAAYC,SACtEC,kBAA2DF,EAAYC,UCHnEE,EAA4B,kBAChCC,OAAOC,QAAQC,aAAa,GAAIC,SAASC,MAAOJ,OAAOK,SAASC,WAErDC,EAAeC,IAAMC,cAAc,IACnCC,EAAW,kBAAMC,qBAAWJ,IAC5BK,EAAgB,SAAC,GAGvB,IAFLC,EAEI,EAFJA,SACAC,EACI,EADJA,mBACI,EAC0CC,oBAAS,GADnD,mBACGC,EADH,KACoBC,EADpB,OAEoBF,mBAAS,MAF7B,mBAEGG,EAFH,KAESC,EAFT,OAG4BJ,mBAAS,MAHrC,mBAGGK,EAHH,KAGgBC,EAHhB,OAI0BN,oBAAS,GAJnC,mBAIGO,EAJH,KAIYC,EAJZ,KAM8B,oBAAvBT,IACTA,EAAqBf,GAMvByB,qBAAU,YACO,uCAAG,oCAAAC,EAAA,sEAEYC,YAAkB,CAC5CnC,OAAQoC,EAAOpC,OACfqC,UAAWD,EAAOnC,SAClBC,SAAUkC,EAAOlC,SACjBC,MAAOiC,EAAOjC,MACdmC,aAAcF,EAAOhC,mBAPP,UAEVmC,EAFU,OAShBT,EAASS,IAEL9B,OAAOK,SAAS0B,OAAOC,SAAS,SAXpB,iCAYaF,EAAcG,yBAZ3B,gBAYNC,EAZM,EAYNA,SACRpB,EAAmBoB,GAbL,yBAgBcJ,EAAcd,kBAhB5B,WAgBVA,EAhBU,OAkBhBC,EAAmBD,IAEfA,EApBY,kCAqBKc,EAAcK,UArBnB,QAqBRjB,EArBQ,OAsBdC,EAAQD,GAtBM,QAyBhBK,GAAW,GAzBK,4CAAH,qDA4Bfa,GACGC,OAAM,SAACC,GACNC,QAAQC,MAAM,oBAAqBF,GACnCtC,OAAOK,SAASoC,QAAQ,UAG3B,CAAC3B,IAEJ,IAAMmB,EAAsB,uCAAG,4BAAAR,EAAA,6DAC7BF,GAAW,GADkB,SAEvBH,EAAYa,yBAFW,uBAGVb,EAAYe,UAHF,OAGvBjB,EAHuB,OAI7BK,GAAW,GACXN,GAAmB,GACnBE,EAAQD,GANqB,2CAAH,qDAStBwB,EAAgB,uCAAG,4BAAAjB,EAAA,+EAGDL,EAAYsB,mBAHX,OAGrBC,EAHqB,6DAKrBJ,QAAQK,IAAR,MACM,IAAIC,MAAM,iCANK,2CASd,CAAEC,IAAKH,EAAaI,QAASC,IAAWL,KAT1B,yCAWrBJ,QAAQK,IAAR,MACM,IAAIC,MAAM,iCAZK,iEAAH,qDAgBhBI,EAAmB,uCAAG,8BAAAxB,EAAA,+EAGViB,IAHU,OAGxBQ,EAHwB,+EAKjB,IALiB,cAOpBC,GAAeD,EAAMH,QAAQrD,OAAS,IAAM,GAPxB,kBAQnByD,EAAYC,MAAM,OARC,yDAAH,qDAWnBC,EAAgB,uCAAG,WAAOC,GAAP,eAAA7B,EAAA,sEACGwB,IADH,cACjBM,EADiB,yBAEhBD,GAAUA,EAAOE,QAAUF,EAAOG,MAAK,SAAAC,GAAC,OAAIH,EAAYI,QAAQD,IAAM,MAFtD,2CAAH,sDAStB,OACE,kBAACnD,EAAaqD,SAAd,CACEC,MAAO,CACL7C,kBACAE,OACAI,UACAW,yBACA6B,iBAAkB,kBAAU1C,EAAY0C,iBAAZ,MAAA1C,EAAW,YACvC2C,kBAAmB,kBAAU3C,EAAY2C,kBAAZ,MAAA3C,EAAW,YACxCsB,mBACAW,mBACAW,kBAAmB,kBAAU5C,EAAY4C,kBAAZ,MAAA5C,EAAW,YACxC6C,mBAhBqB,kBAAM7C,EAAY8C,OAAO,CAClDC,SAAUxC,EAAO7B,uBAkBde,I,OC7EQuD,EA1CA,WAAO,IAAD,EACgD1D,IAA3DM,EADW,EACXA,gBAAiB+C,EADN,EACMA,kBAAmBE,EADzB,EACyBA,mBAE5C,OAAQ,yBAAKI,UAAU,8CACrB,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAIC,0BAAnC,QAGA,wBAAIF,UAAU,sBACZ,wBAAIA,UAAU,uBAEdrD,GAAoB,wBAAIqD,UAAU,cAClC,0BAAMA,UAAU,eACd,4BAAQA,UAAU,0BACVG,KAAK,SACLC,QAAS,kBAAMV,EAAkB,MAFzC,YAOH/C,GAAoB,oCACnB,wBAAIqD,UAAU,cACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAIC,0BAA/B,SAEF,wBAAIF,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAIC,iCAA/B,aAGJ,0BAAMF,UAAU,oBACd,4BAAQA,UAAU,4BACVG,KAAK,SACLC,QAAS,kBAAMR,MAFvB,gB,wBCSKS,EAvCC,WAAO,IAAD,EACMhE,IAAlBY,EADY,EACZA,QAASJ,EADG,EACHA,KADG,EAEUH,mBAAS,IAFnB,mBAEb4D,EAFa,KAEJC,EAFI,KAcpB,OAVApD,qBAAU,YACHF,GAAWJ,GACd2D,IAAMC,IAAI,OACPC,MAAK,SAAAC,GAAQ,OAAIJ,EAAWI,EAASC,SACrC5C,OAAM,WACLuC,EAAW,SAGhB,CAACtD,EAASJ,IAETI,IAAYJ,EACP,yBAAKmD,UAAU,+DACpB,0BAAMA,UAAU,iBAAiBa,aAAW,iBAK9C,yBAAKb,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,yBAAKc,IAAKjE,EAAKkE,QAASC,IAAI,UAAUhB,UAAU,eAElD,yBAAKA,UAAU,YACb,4BAAKnD,EAAKoE,MACV,2BAAIpE,EAAKqE,QAEX,yBAAKlB,UAAU,YACb,0BAAMA,UAAU,uCAAuCmB,KAAKC,UAAUvE,EAAM,KAAM,IAClF,yBAAKmD,UAAU,kCAAkCmB,KAAKC,UAAUd,EAAS,KAAM,Q,OCnC1Ee,gB,QCwBAC,EArBM,SAAC,GAA6C,IAAhCC,EAA+B,EAA1CC,UAAsBC,EAAoB,EAApBA,KAASC,EAAW,sCACRrF,IAAhDY,EADwD,EACxDA,QAASN,EAD+C,EAC/CA,gBAAiB+C,EAD8B,EAC9BA,kBAElCvC,qBAAU,WACJF,GAAWN,GAGP,uCAAG,sBAAAS,EAAA,sEACHsC,EAAkB,CACtB7B,SAAU,CAAE8D,UAAWF,KAFhB,2CAAH,oDAKRG,KACC,CAAC3E,EAASN,EAAiB+C,EAAmB+B,IAKjD,OAAO,kBAAC,IAAD,eAAOA,KAAMA,EAAMI,OAHX,SAAAC,GAAK,OACE,IAApBnF,EAA2B,kBAAC4E,EAAcO,GAAY,OAEVJ,KCRjCK,EAXF,WACX,OACE,yBAAK/B,UAAU,yBACb,wBAAIA,UAAU,aAAd,mBACA,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAMA,UAAU,8BAA8BC,GAAIC,iCAAlD,6BPIJ8B,EAA8B,GAC9BC,EAA8B,GAuKnBC,MArKf,WAEE1B,IAAM2B,SAASC,QAAUlC,+DAFZ,MAIyB7D,IAA9BY,EAJK,EAILA,QAASoB,EAJJ,EAIIA,iBAJJ,EAM6B3B,oBAAS,GANtC,mBAMN2F,EANM,KAMSC,EANT,OAO6B5F,oBAAS,GAPtC,mBAON6F,EAPM,KAOSC,EAPT,OAQ6C9F,oBAAS,GARtD,mBAQN+F,EARM,KAQiBC,EARjB,KAUPC,EACU,IADVA,EAEO,IAFPA,EAGS,IAwDf,SAASC,EAAaC,GACpB,OAAQA,GACN,KAAKF,EACH,KAAOX,EAA4B7C,OAAS,GAC1C6C,EAA4Bc,QAAQC,OAEtCT,GAAiB,GACjB,MACF,KAAKK,EACH,KAAOV,EAA4B9C,OAAS,GAC1C8C,EAA4Ba,QAAQC,OAEtCP,GAAiB,GACjB,MACF,QACEF,GAAiB,GACjBE,GAAiB,GACjBE,GAAyB,IAIK,MAAhC1H,GACFwF,IAAMwC,aAAaC,QAAQC,MAAMlI,GAGE,MAAjCC,GACFuF,IAAMwC,aAAarC,SAASuC,MAAMjI,GAG/BgC,IACHjC,EAA+BwF,IAAMwC,aAAaC,QAAQE,KA9E5D,SAAkC7F,GAEhC,OADAY,QAAQK,IAAI,2BACLF,IACJqC,MAAK,SAAC7B,GAIL,OAHAX,QAAQK,IAAI,gCAAiCM,GAC7CvB,EAAO8F,QAAU9F,EAAO8F,SAAW,GACnC9F,EAAO8F,QAAQC,cAAf,iBAAyCxE,EAAMJ,KACxCnB,KAERU,OAAM,SAACsF,GAEN,OADApF,QAAQK,IAAI,gCAAiC+E,GACtChG,QAoEXrC,EAAgCuF,IAAMwC,aAAarC,SAASwC,KAAI,SAACI,GAAD,OAAUA,KA3D5E,SAA0CpF,GAExC,GADAD,QAAQK,IAAIJ,GACRA,GAASA,EAAMwC,SACjB,OAAQxC,EAAMwC,SAAS6C,QACrB,KAAKb,EACH,OAAO,IAAIc,SAAQ,SAAAC,GACjB1B,EAA4B2B,KAAKD,GACjCpB,GAAiB,MAChB5B,MAAK,kBAAM+C,QAAQG,OAAOzF,MAC/B,KAAKwE,EACH,OAAO,IAAIc,SAAQ,SAAAC,GACjBzB,EAA4B0B,KAAKD,GACjClB,GAAiB,MAChB9B,MAAK,kBAAM+C,QAAQG,OAAOzF,MAC/B,QAIE,OAHIA,EAAMwC,SAAS6C,QAAUb,GAC3BD,GAAyB,GAEpBe,QAAQG,OAAOzF,QAI1BuE,GAAyB,GAG3B,OAAOe,QAAQG,OAAOzF,OAqCxB,IAAI0F,EAAiB,KACjBC,EAAmB,KACnBC,EAAmB,KACnBC,EAAsB,KA4B1B,OA1BI3B,IAAeyB,EAAoB,yBAAK9D,UAAU,aACpD,yBAAKA,UAAU,2BAAf,6BACE,4BAAQG,KAAK,SAASC,QAAS,kBAAMwC,EAAYD,IAAqB3C,UAAU,QAAQa,aAAW,SAAQ,0BAAMoD,cAAY,QAAlB,YAI3G1B,IAAewB,EAAoB,yBAAK/D,UAAU,aACpD,yBAAKA,UAAU,2BAAf,8CACE,4BAAQG,KAAK,SAASC,QAAS,kBAAMwC,EAAYD,IAAkB3C,UAAU,QAAQa,aAAW,SAAQ,0BAAMoD,cAAY,QAAlB,YAIxGxB,IAAuBuB,EAAuB,yBAAKhE,UAAU,aAC/D,yBAAKA,UAAU,2BAAf,6CACE,4BAAQG,KAAK,SAASC,QAAS,kBAAMwC,EAAYD,IAAoB3C,UAAU,QAAQa,aAAW,SAAQ,0BAAMoD,cAAY,QAAlB,aAI1GH,GAAoBC,GAAoBC,KAC1CH,EAAkB,yBAAK7D,UAAU,eAC9B8D,EACAC,EACAC,IAKH,yBAAKhE,UAAU,iCACZ6D,EACD,kBAAC,IAAD,CAAQjI,QAASA,GACf,gCACE,kBAAC,EAAD,OAEF,8BACIqB,GAAW,yBAAK+C,UAAU,4DAC1B,0BAAMA,UAAU,iBAAiBa,aAAW,kBAE3C5D,GAAW,kBAAC,IAAD,KACZ,kBAAC,IAAD,CAAOwE,KAAMvB,yBAA8BgE,OAAK,EAAC1C,UAAWO,IAC5D,kBAAC,EAAD,CAAcN,KAAMvB,gCAAqCsB,UAAWnB,MAGxE,4BAAQL,UAAU,iDAChB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,qDACb,2CAAiBrE,OAAOwI,mBACxB,0BAAMnE,UAAU,YAChB,uBAAGoE,KAAK,wDAAwDpE,UAAU,qCAA1E,yBACA,uBAAGoE,KAAK,oEAAoEpE,UAAU,gCAAtF,mCQ/JMqE,QACW,cAA7B1I,OAAOK,SAASsI,UAEe,UAA7B3I,OAAOK,SAASsI,UAEhB3I,OAAOK,SAASsI,SAASC,MACvB,2DCANC,IAAS3C,OACP,kBAAC,EAAD,CAAepF,mBATU,SAAAoB,GACzBjC,EAAQ+H,KACN9F,GAAYA,EAAS8D,UACjB9D,EAAS8D,UACThG,OAAOK,SAASC,YAMpB,kBAAC,EAAD,OAEFH,SAAS2I,eAAe,SD6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlE,MAAK,SAAAmE,GACjCA,EAAaC,kB","file":"static/js/main.a77846f7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport NavBar from \"./components/NavBar\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport axios from 'axios';\nimport Profile from \"./components/Profile\";\nimport history from \"./utils/history\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Home from './components/Home';\nimport { useAuth0 } from './react-auth0-spa';\n\nlet axiosRequestInterceptorSetup;\nlet axiosResponseInterceptorSetup;\nlet bufferOf401PromiseResolvers = [];\nlet bufferOf403PromiseResolvers = [];\n\nfunction App() {\n\n  axios.defaults.baseURL = process.env.REACT_APP_SERVER;\n\n  const { loading, getTokenSilently } = useAuth0();\n\n  const [dialog401Open, setDialog401Open] = useState(false);\n  const [dialog403Open, setDialog403Open] = useState(false);\n  const [dialogServerErrorOpen, setDialogServerErrorOpen] = useState(false);\n\n  const ERROR = {\n    unauthorized: 401,\n    forbidden: 403,\n    serverError: 500\n  };\n\n  /**\n   * Can be used only after Auth0Client is ready!\n   * @param config\n   * @return {Q.Promise<any> | Promise<any>}\n   */\n  function axiosRequestInterceptor (config) {\n    console.log('axiosRequestInterceptor')\n    return getTokenSilently()\n      .then((token) => {\n        console.log('axiosRequestInterceptor token', token)\n        config.headers = config.headers || {};\n        config.headers.Authorization = `Bearer ${token.raw}`;\n        return config;\n      })\n      .catch((err) => {\n        console.log('axiosRequestInterceptor catch', err)\n        return config;\n      });\n  }\n\n  /**\n   * Can be used only after Auth0Client is ready!\n   * @param error\n   * @return {Q.Promise<any> | Promise<any>}\n   */\n  function axiosResponseFailureInterceptor (error) {\n    console.log(error)\n    if (error && error.response) {\n      switch (error.response.status) {\n        case ERROR.unauthorized:\n          return new Promise(resolve => {\n            bufferOf401PromiseResolvers.push(resolve);\n            setDialog401Open(true);\n          }).then(() => Promise.reject(error));\n        case ERROR.forbidden:\n          return new Promise(resolve => {\n            bufferOf403PromiseResolvers.push(resolve);\n            setDialog403Open(true);\n          }).then(() => Promise.reject(error));\n        default:\n          if (error.response.status >= ERROR.serverError){\n            setDialogServerErrorOpen(true);\n          }\n          return Promise.reject(error);\n      }\n    } else {\n      // Necessary to show errors without status codes like \"Network Error\"\n      setDialogServerErrorOpen(true);\n    }\n\n    return Promise.reject(error);\n  }\n\n  function closeDialog (errorType) {\n    switch (errorType) {\n      case ERROR.unauthorized:\n        while (bufferOf401PromiseResolvers.length > 0) {\n          bufferOf401PromiseResolvers.shift().call();\n        }\n        setDialog401Open(false);\n        break;\n      case ERROR.forbidden:\n        while (bufferOf403PromiseResolvers.length > 0) {\n          bufferOf403PromiseResolvers.shift().call();\n        }\n        setDialog403Open(false);\n        break;\n      default:\n        setDialog401Open(false);\n        setDialog403Open(false);\n        setDialogServerErrorOpen(false);\n    }\n  }\n\n  if (axiosRequestInterceptorSetup != null) {\n    axios.interceptors.request.eject(axiosRequestInterceptorSetup);\n  }\n\n  if (axiosResponseInterceptorSetup != null) {\n    axios.interceptors.response.eject(axiosResponseInterceptorSetup);\n  }\n\n  if (!loading) {\n    axiosRequestInterceptorSetup = axios.interceptors.request.use(axiosRequestInterceptor);\n    axiosResponseInterceptorSetup = axios.interceptors.response.use((resp) => resp, axiosResponseFailureInterceptor);\n  }\n\n  let apiErrorsIfAny = null;\n  let api401ErrorIfAny = null;\n  let api403ErrorIfAny = null;\n  let apiServerErrorIfAny = null;\n\n  if (dialog401Open) api401ErrorIfAny = (<div className=\"container\">\n    <div className=\"alert alert-danger mb-2\">Authentication is required\n      <button type=\"button\" onClick={() => closeDialog(ERROR.unauthorized)} className=\"close\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n    </div>\n  </div>);\n\n  if (dialog403Open) api403ErrorIfAny = (<div className=\"container\">\n    <div className=\"alert alert-danger mb-2\">You're not authorized to perform an action.\n      <button type=\"button\" onClick={() => closeDialog(ERROR.forbidden)} className=\"close\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n    </div>\n  </div>);\n\n  if (dialogServerErrorOpen) apiServerErrorIfAny = (<div className=\"container\">\n    <div className=\"alert alert-danger mb-2\">Server responded with an unexpected error.\n      <button type=\"button\" onClick={() => closeDialog(ERROR.serverError)} className=\"close\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n    </div>\n  </div>);\n\n  if (api401ErrorIfAny || api403ErrorIfAny || apiServerErrorIfAny) {\n    apiErrorsIfAny = (<div className=\"bg-dark p-3\">\n      {api401ErrorIfAny}\n      {api403ErrorIfAny}\n      {apiServerErrorIfAny}\n    </div>);\n  }\n\n  return (\n    <div className=\"d-flex min-vh-100 flex-column\">\n      {apiErrorsIfAny}\n      <Router history={history}>\n        <header>\n          <NavBar />\n        </header>\n        <main>\n          { loading && <div className=\"d-flex align-items-center justify-content-center my-auto\">\n            <span className=\"spinner-border\" aria-label=\"Loading ...\" />\n          </div> }\n          { !loading && <Switch>\n            <Route path={process.env.PUBLIC_URL + \"/\"} exact component={Home}/>\n            <PrivateRoute path={process.env.PUBLIC_URL + \"/profile\"} component={Profile} />\n          </Switch> }\n        </main>\n        <footer className=\"p-4 text-center bg-primary text-light mt-auto\">\n          <div className=\"container\">\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <small>Version: {window.REACT_APP_VERSION}</small>\n              <span className=\"mx-auto\"></span>\n              <a href=\"https://github.com/ivarprudnikov/react-auth0-template\" className=\"btn btn-sm btn-outline-light mr-3\">Source code on Github</a>\n              <a href=\"https://www.ivarprudnikov.com/auth0-authentication-website-react/\" className=\"btn btn-sm btn-outline-light\">About this implementation</a>\n            </div>\n          </div>\n        </footer>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import packageJson from '../package.json';\n\nexport default {\n  domain: \"ivarprudnikov.eu.auth0.com\",\n  clientId: \"EuHrJlslqdI6h5UOuAMtau6maPa05lRd\",\n  audience: \"https://ivarprudnikov.com\",\n  scope: \"openid profile email\",\n  loginCallbackUrl: process.env.NODE_ENV === 'production' ? packageJson.homepage : window.location.origin,\n  logoutRedirectUrl: process.env.NODE_ENV === 'production' ? packageJson.homepage : window.location.origin\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport jwt_decode from 'jwt-decode';\nimport createAuth0Client from '@auth0/auth0-spa-js';\nimport config from './auth_config';\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext({});\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [auth0Client, setAuth0] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  if (typeof onRedirectCallback !== 'function') {\n    onRedirectCallback = DEFAULT_REDIRECT_CALLBACK;\n  }\n\n  /**\n   * Should run only once as options do not change\n   */\n  useEffect(() => {\n    const initAuth0 = async () => {\n\n      const auth0FromHook = await createAuth0Client({\n        domain: config.domain,\n        client_id: config.clientId,\n        audience: config.audience,\n        scope: config.scope,\n        redirect_uri: config.loginCallbackUrl\n      });\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes('code=')) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n\n    initAuth0()\n      .catch((e) => {\n        console.error('initAuth0 failure', e);\n        window.location.replace('/');\n      });\n\n  }, [onRedirectCallback]);\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n\n  const getTokenSilently = async () => {\n    let accessToken;\n    try {\n      accessToken = await auth0Client.getTokenSilently();\n    } catch (e) {\n      console.log(e);\n      throw new Error(\"Could not obtain access token\");\n    }\n    try {\n      return { raw: accessToken, decoded: jwt_decode(accessToken) };\n    } catch (e) {\n      console.log(e);\n      throw new Error(\"Could not decode access token\");\n    }\n  };\n\n  const getTokenScopesAsync = async () => {\n    let token;\n    try {\n      token = await getTokenSilently();\n    } catch (e) {\n      return [];\n    }\n    const scopeString = (token.decoded.scope || '') + '';\n    return scopeString.split(/\\W/);\n  };\n\n  const hasAnyScopeAsync = async (scopes) => {\n    const tokenScopes = await getTokenScopesAsync();\n    return scopes && scopes.length && scopes.some(s => tokenScopes.indexOf(s) > -1);\n  };\n\n  const logoutWithRedirect = () => auth0Client.logout({\n    returnTo: config.logoutRedirectUrl\n  });\n\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently,\n        hasAnyScopeAsync,\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logoutWithRedirect\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import React from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n  const { isAuthenticated, loginWithRedirect, logoutWithRedirect } = useAuth0();\n\n  return (<nav className=\"navbar navbar-expand navbar-light bg-light\">\n    <div className=\"container\">\n      <Link className=\"navbar-brand\" to={process.env.PUBLIC_URL + \"/\"}>\n        Brnd\n      </Link>\n      <ul className=\"navbar-nav mr-auto\">\n        <li className=\"nav-item-divider\"/>\n      </ul>\n      {!isAuthenticated && (<ul className=\"navbar-nav\">\n        <form className=\"form-inline\">\n          <button className=\"btn btn-outline-primary\"\n                  type=\"button\"\n                  onClick={() => loginWithRedirect({})}>\n            Log in\n          </button>\n        </form>\n      </ul>)}\n      {isAuthenticated && (<>\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={process.env.PUBLIC_URL + \"/\"}>Home</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={process.env.PUBLIC_URL + \"/profile\"}>Profile</Link>\n          </li>\n        </ul>\n        <form className=\"form-inline ml-4\">\n          <button className=\"btn btn-outline-secondary\"\n                  type=\"button\"\n                  onClick={() => logoutWithRedirect()}>\n            Log out\n          </button>\n        </form>\n      </>)}\n    </div>\n  </nav>);\n\n};\n\nexport default NavBar;\n","import React, { useEffect, useState } from 'react';\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport axios from 'axios';\n\nconst Profile = () => {\n  const { loading, user } = useAuth0();\n  const [apiUser, setApiUser] = useState({});\n\n  useEffect(() => {\n    if (!loading && user) {\n      axios.get('/me')\n        .then(response => setApiUser(response.data))\n        .catch(() => {\n          setApiUser({});\n        });\n    }\n  }, [loading, user]);\n\n  if (loading || !user) {\n    return <div className=\"d-flex min-vh-100 align-items-center justify-content-center\">\n      <span className=\"spinner-border\" aria-label=\"Loading ...\" />\n    </div>;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-2\">\n          <img src={user.picture} alt=\"Profile\" className=\"img-fluid\" />\n        </div>\n        <div className=\"col-sm-4\">\n          <h2>{user.name}</h2>\n          <p>{user.email}</p>\n        </div>\n        <div className=\"col-sm-6\">\n          <code className=\"p-3 bg-dark text-light d-block mb-3\">{JSON.stringify(user, null, 2)}</code>\n          <pre className=\"p-3 bg-dark text-light d-block\">{JSON.stringify(apiUser, null, 2)}</pre>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\n\n  useEffect(() => {\n    if (loading || isAuthenticated) {\n      return;\n    }\n    const fn = async () => {\n      await loginWithRedirect({\n        appState: { targetUrl: path }\n      });\n    };\n    fn();\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\n\n  const render = props =>\n    isAuthenticated === true ? <Component {...props} /> : null;\n\n  return <Route path={path} render={render} {...rest} />;\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n  return (\n    <div className=\"container text-center\">\n      <h1 className=\"display-1\">Super fancy app</h1>\n      <div className=\"mt-5\">\n        <Link className=\"btn btn-lg btn-primary mr-2\" to={process.env.PUBLIC_URL + \"/profile\"}>Protected profile page</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Auth0Provider } from \"./react-auth0-spa\";\nimport history from \"./utils/history\";\n\n// A function that routes the user to the right place\n// after login\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider onRedirectCallback={onRedirectCallback}>\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}